การวิเคราะห์ระบบเดิม
จากการศึกษา code พบว่าระบบปัจจุบันมีโครงสร้างดังนี้:
โครงสร้างฐานข้อมูล

users - ข้อมูลผู้ใช้งาน (นักศึกษา, admin)
document_types - ประเภทเอกสาร
document_requests - คำขอเอกสาร
document_request_items - รายการเอกสารย่อย
status_history - ประวัติการเปลี่ยนสถานะ
faculties - ข้อมูลคณะ

การทำงานของระบบเดิม

นักศึกษาลงทะเบียน/เข้าสู่ระบบ
เลือกประเภทเอกสารและกรอกข้อมูล
อัปโหลดหลักฐานการชำระเงิน
Admin ตรวจสอบและเปลี่ยนสถานะ
มีระบบแจ้งเตือนผ่าน LINE

การออกแบบฟังก์ชันใหม่
1. เอกสารประเภทใหม่ที่ต้องการเพิ่ม

เอกสารขออนุมัติลงทะเบียนเกินกำหนด
เอกสารขออนุมัติเพิ่มถอนรายวิชา

2. กระบวนการอนุมัติใหม่ (Workflow)
นักศึกษายื่นขอ → ส่งอีเมลแจ้งอาจารย์ที่ปรึกษา → อาจารย์ login อนุมัติ → ส่งต่อแผนกทะเบียน
แผนการพัฒนาและลำดับขั้นตอน
Phase 1: เตรียมฐานข้อมูล

เพิ่มตาราง faculty_advisors - เก็บข้อมูลอีเมลอาจารย์ที่ปรึกษาแต่ละคณะ
เพิ่มตาราง approval_workflow - เก็บขั้นตอนการอนุมัติ
เพิ่มประเภทเอกสารใหม่ในตาราง document_types
เพิ่ม role ใหม่ advisor ในตาราง users

Phase 2: Backend API

สร้าง Email Service สำหรับส่งอีเมลแจ้งอาจารย์
เพิ่ม endpoint จัดการข้อมูลอาจารย์ที่ปรึกษา
เพิ่ม middleware สำหรับตรวจสอบสิทธิ์อาจารย์
สร้าง endpoint สำหรับอาจารย์อนุมัติ/ปฏิเสธ
แก้ไข workflow การขอเอกสารให้รองรับการอนุมัติ

Phase 3: Frontend

สร้างหน้าจัดการข้อมูลอาจารย์ที่ปรึกษา (Admin)
แก้ไขหน้าขอเอกสารให้แสดงเอกสารประเภทใหม่
สร้างหน้า Dashboard สำหรับอาจารย์
เพิ่มสถานะใหม่ในการติดตามคำขอ

Phase 4: Integration & Testing

ทดสอบการส่งอีเมล
ทดสอบ workflow การอนุมัติ
ทดสอบการเชื่อมต่อกับระบบเดิม
ตรวจสอบความถูกต้องของข้อมูล

ไฟล์ที่ต้องสร้าง/แก้ไข
ไฟล์ใหม่ที่ต้องสร้าง:

services/emailService.js - ระบบส่งอีเมล
routes/advisors.js - API สำหรับอาจารย์
routes/faculty-management.js - จัดการข้อมูลคณะ
middleware/advisor.js - ตรวจสอบสิทธิ์อาจารย์
database/approval_workflow.sql - SQL สำหรับตารางใหม่

ไฟล์ที่ต้องแก้ไข:

database/schema.sql - เพิ่มตารางใหม่
routes/documents.js - เพิ่มฟังก์ชันการขอเอกสารแบบใหม่
routes/admin.js - เพิ่มการจัดการอาจารย์
routes/auth.js - รองรับ role อาจารย์

คุณต้องการให้ฉันเริ่มสร้าง code จากส่วนไหนก่อนครับ? แนะนำให้เริ่มจาก Phase 1: ฐานข้อมูล เพื่อวางโครงสร้างให้ถูกต้องก่อน
